version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0.16 
      # - image: circleci/node:14
    # environment:
    #   SONAR_TOKEN: 97e22ce748b6b6855d1f1fcd0e3ca2323abd0219
    #   SONAR_PROJECT_KEY: saks-code-repo
    #   SONAR_ORGANIZATION: dhanu0001
    steps:
      - checkout
      # - run:
      #    command: |
      #     # cd /home/circleci/project/
      #     apt-get update
      #     apt-get install -y jq checkstyle
      #     wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      #     tar xzf apache-maven-3.5.4-bin.tar.gz
      #     ln -s apache-maven-3.5.4 maven
      #     wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      #     unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      #     export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
      # - run:
      #     name: Install dependencies 
      #     command: npm ci
      # - run:
      #     name: Run tests
      #     command: npm test
      - run:
          name: Install SonarScanner
          command: |
            wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
            tar xzf apache-maven-3.5.4-bin.tar.gz 
            rm apache-maven-3.5.4-bin.tar.gz
            ln -s apache-maven-3.5.4 maven
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip
            unzip sonar-scanner-cli-4.5.0.2216-linux.zip
            rm sonar-scanner-cli-4.5.0.2216-linux.zip
            export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
            # cd /home/circleci/project/
            cd /home/circleci/project/
            ls -lrt /home/circleci/project           
            # mvn clean install
            # mvn clean package
            # mvn install -DskipTests
            mvn test
            mvn clean verify sonar:sonar -Dsonar.login=b97f1cde315e3ef320c2a1ce1e66d66ac93c3efd -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=saks-code-analysis -Dsonar.projectKey=dhanu0001_springboot-java-maven-project -Dsonar.qualitygate.wait=true
            # mvn sonar:sonar -Pcoverage
            curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
            cat /home/circleci/project/result.json
            #cat /home/circleci/project/target/sonar/report-task.txt
            # mvn install -DskipTests
            # mvn sonar:sonar
            # ls -lrt /home/circleci/project/sonar
      
      # - run:
      #     name: Analyze with SonarCloud
      #     command: |
      #       ./sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner \
      #         -Dsonar.projectKey=$Project_Key \
      #         -Dsonar.organization=$Organization \
      #         -Dsonar.sources=. \
      #         -Dsonar.host.url=$Host \
      #         -Dsonar.login=$Sonar_Token \
      #         -Dsonar.sources=src/test/java/com/jtspringproject/JtSpringProject \
      #         -Dsonar.java.binaries=target/classes/com/jtspringproject/JtSpringProject/controller/ \
      #         -Dsonar.junit.reportsPath=target/surefire-reports/ \
      #         -Dsonar.jacoco.reportsPath=target/jacoco.exec